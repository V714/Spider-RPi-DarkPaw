{"version":3,"sources":["index.js","www/App.js","www/serviceWorker.js","www/index.js"],"names":["module","exports","require","ENDPOINT","App","_useState","useState","_useState2","Object","slicedToArray","streamSize","setStreamSize","_useState3","_useState4","nowPressed","setNowPressed","_useState5","_useState6","socket","socketIOClient","useEffect","document","addEventListener","keyboardPress","on","console","log","disconnect","event","keyCode","buttons","getElementById","style","map","item","backgroundColor","color","emit","key","changeSize","streamStyle","width","height","react_default","a","createElement","className","onClick","id","src","Boolean","window","location","hostname","match","ReactDOM","render","www_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e451a390.chunk.js","sourcesContent":["// \"Create React App\" tooling expects to find the WWW root here,\n// so we simply use this file to import the ./www directory.\n//\n// For the backend, we set the container's entrypoint to src/api/index.js\n\nmodule.exports = require('./www')\n","import React, {useEffect,useState} from 'react'\nimport './App.css'\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://127.0.0.1:8000\";\n\nfunction App(){\n  const [streamSize, setStreamSize] = useState(2)\n  const [nowPressed, setNowPressed] = useState('SPACE')\n  const [response, setResponse] = useState(\"\")\n\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(()=>{\n    document.addEventListener(\"keydown\", keyboardPress, false);\n    socket.on('connect', function() {\n      console.log('client connected');\n    });\n\n    return () => socket.disconnect();\n\n  },[])\n\n  const keyboardPress = (event) => {\n    switch(event.keyCode){\n      case 87: setNowPressed('W');break;\n      case 83: setNowPressed('S');break;\n      case 65: setNowPressed('A');break;\n      case 68: setNowPressed('D');break;\n      case 32: setNowPressed('SPACE');break;\n      case 81: setNowPressed('Q');break;\n      case 69: setNowPressed('E');break;\n      case 90: setNowPressed('Z');break;\n      case 67: setNowPressed('C');break;\n      case 73: setNowPressed('I');break;\n      case 66: setNowPressed('B');break;\n    }\n  }\n\n  useEffect(()=>{\n    const buttons = [document.getElementById('W').style,\n                    document.getElementById('S').style,\n                    document.getElementById('A').style,\n                    document.getElementById('D').style,\n                  \n                    document.getElementById('SPACE').style,\n                  \n                    document.getElementById('Q').style,\n                    document.getElementById('E').style,\n                    document.getElementById('Z').style,\n                    document.getElementById('C').style,\n                    document.getElementById('I').style,\n                    document.getElementById('B').style,\n                    ]\n    \n    buttons.map(item=>{item.backgroundColor=\"\";item.color=\"\"})\n    switch(nowPressed){\n      case 'W':buttons[0].backgroundColor=\"#222\";buttons[0].color=\"#fff\";break;\n      case 'S':buttons[1].backgroundColor=\"#222\";buttons[1].color=\"#fff\";break;\n      case 'A':buttons[2].backgroundColor=\"#222\";buttons[2].color=\"#fff\";break;\n      case 'D':buttons[3].backgroundColor=\"#222\";buttons[3].color=\"#fff\";break;\n      case 'SPACE':buttons[4].backgroundColor=\"#222\";buttons[4].color=\"#fff\";break;\n      case 'Q':buttons[5].backgroundColor=\"#222\";buttons[5].color=\"#fff\";break;\n      case 'E':buttons[6].backgroundColor=\"#222\";buttons[6].color=\"#fff\";break;\n      case 'Z':buttons[7].backgroundColor=\"#222\";buttons[7].color=\"#fff\";break;\n      case 'C':buttons[8].backgroundColor=\"#222\";buttons[8].color=\"#fff\";break;\n      case 'I':buttons[9].backgroundColor=\"#222\";buttons[9].color=\"#fff\";break;\n      case 'B':buttons[10].backgroundColor=\"#222\";buttons[10].color=\"#fff\";break;\n    }\n    \n    socket.emit(\"data\",{'key':nowPressed})\n  },[nowPressed])\n\n  const higherSize = () => {\n    if(streamSize<6)setStreamSize(streamSize+1,changeSize)\n  }\n\n  const lowerSize = () => {\n    if(streamSize>0)setStreamSize(streamSize-1,changeSize)\n  }\n\n  useEffect(()=>{\n    changeSize()\n  },[streamSize])\n\n  const changeSize = () => {\n    const streamStyle = document.getElementById('stream').style\n    switch(streamSize){\n      case 0:\n        streamStyle.width='160px'\n        streamStyle.height='120px'\n        break\n      case 1:\n        streamStyle.width='320px'\n        streamStyle.height='240px'\n        break\n      case 2:\n        streamStyle.width='640px'\n        streamStyle.height='480px'\n        break\n      case 3:\n        streamStyle.width='800px'\n        streamStyle.height='600px'\n        break\n      case 4:\n        streamStyle.width='1024px'\n        streamStyle.height='768px'\n        break\n      case 5:\n        streamStyle.width='1280px'\n        streamStyle.height='962px'\n        break\n      case 6:\n        streamStyle.width='2048px'\n        streamStyle.height='1536px'\n        break\n      default:\n        streamStyle.width='640px'\n        streamStyle.height='480px'\n        break\n    }\n  }\n\n    return (\n      <div className=\"App\">\n        <div className='stream-div'>\n          <div className='stream-size'>\n            <button onClick={()=>lowerSize()} className='size-button'>-</button>\n            <button onClick={()=>higherSize()} className='size-button'>+</button>\n          </div>\n          <img id=\"stream\" src=\"stream.mjpg\"/>\n        </div>\n        <div className='controls'>\n          <div className='controls-directions'>\n            <div className='controls-directions-row'>\n              <button id=\"Q\" className='constrols-button bblue '><div className=\"rot25\">🠖</div><div className='button-description'>Q</div></button>\n              <button id=\"W\" className='constrols-button byellow '><div className=\"rot3\">🠖</div><div className='button-description'>W</div></button>\n              <button id=\"E\" className='constrols-button bblue '><div className=\"rot35\">🠖</div><div className='button-description'>E</div></button>\n            </div>\n            <div className='controls-directions-row'>\n              <button id=\"A\" className='constrols-button bgray'><div className=\"rot2\">🠖</div><div className='button-description'>A</div></button>\n              <button id=\"S\" className='constrols-button byellow'><div className=\"rot1\">🠖</div><div className='button-description'>S</div></button>\n              <button id=\"D\" className='constrols-button bgray'><div className=\"rot\">🠖</div><div className='button-description'>D</div></button>\n            </div>\n            <div className='controls-directions-row'>\n              <button id=\"Z\" className='constrols-button bblue '><div className=\"rot15\">🠖</div><div className='button-description'>Z</div></button>\n              <button  id=\"C\" className='constrols-button bblue '><div className=\"rot05\">🠖</div><div className='button-description'>C</div></button>\n            </div>\n            <div className='controls-directions-row'>\n              <button id=\"SPACE\" className='constrols-button bred bwide3'>STOP<div className='button-description'>Space</div></button>\n            </div>\n          </div>\n\n          <div className='controls-standup'>\n            <div className='controls-directions-row'>\n              <button id=\"I\" className='constrols-button bwhite bwide3'>Stand Up - FRONT<div className='button-description'>I</div></button>\n            </div>\n            <div className='controls-directions-row'>\n              <button id=\"B\" className='constrols-button blblue bwide3'>LIGHT<div className='button-description'>B</div></button>\n            </div>\n          </div>\n        </div>\n        <div className='pressed-now'>\n          {nowPressed}\n        </div>\n      </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}